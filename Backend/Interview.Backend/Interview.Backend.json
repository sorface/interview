{
  "openapi": "3.0.1",
  "info": {
    "title": "Open API",
    "description": "Service Interface",
    "contact": {
      "name": "Vladislav Petyukevich",
      "url": "https://github.com/VladislavPetyukevich",
      "email": "test@yandex.ru"
    },
    "license": {
      "name": "Example License",
      "url": "https://example.com/license"
    },
    "version": "v1"
  },
  "paths": {
    "/api/login/{scheme}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "scheme",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirectUri",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/category/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Getting a category by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Categories.Page.CategoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Updating the category by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the of category.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The object with the category data for which you need to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Categories.Edit.CategoryEditRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Categories.Edit.CategoryEditRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Categories.Edit.CategoryEditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Categories.Page.CategoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Getting a available category page.",
        "parameters": [
          {
            "name": "Filter.ParentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Filter.Name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter.ShowOnlyWithoutParent",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Filter.EditingCategoryId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Page.PageSize",
            "in": "query",
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page.PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Categories.Page.CategoryResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Creating a new category.",
        "requestBody": {
          "description": "category edit request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Categories.Edit.CategoryEditRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Categories.Edit.CategoryEditRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Categories.Edit.CategoryEditRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Categories.Page.CategoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/category/archive": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Getting a available archived category page.",
        "parameters": [
          {
            "name": "Filter.ParentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Filter.Name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter.ShowOnlyWithoutParent",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Filter.EditingCategoryId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Page.PageSize",
            "in": "query",
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page.PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Categories.Page.CategoryResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/category/archive/{id}": {
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Archive category.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id category.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Categories.Page.CategoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/category/unarchive/{id}": {
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Unarchive category.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id category.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Categories.Page.CategoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/event": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Getting a AppEvent page.",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Questions.Records.FindPage.QuestionItem"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Creating a new event.",
        "requestBody": {
          "description": "Create request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Events.Service.Create.AppEventCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Events.Service.Create.AppEventCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Events.Service.Create.AppEventCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/event/{id}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Getting a Event by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Events.Service.FindPage.AppEventItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Events.Service.FindPage.AppEventItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Events.Service.FindPage.AppEventItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Event"
        ],
        "summary": "Update room.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Events.Service.Update.AppEventUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Events.Service.Update.AppEventUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Events.Service.Update.AppEventUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/event/{type}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Getting a Event by Type.",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Events.Service.FindPage.AppEventItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Events.Service.FindPage.AppEventItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Events.Service.FindPage.AppEventItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/questions": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "Getting a Question page.",
        "parameters": [
          {
            "name": "Tags",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Page.PageSize",
            "in": "query",
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page.PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Questions.Records.FindPage.QuestionItem"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Question"
        ],
        "summary": "Creating a new question.",
        "requestBody": {
          "description": "The object with the question data for which you need to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Questions.QuestionCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Questions.QuestionCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Questions.QuestionCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Questions.Records.FindPage.QuestionItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/questions/archived": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "Getting a list of archived questions.",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Questions.Records.FindPage.QuestionItem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/questions/{id}": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "Getting a question by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Question ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Questions.Records.FindPage.QuestionItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Question"
        ],
        "summary": "Updating the question by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the of question.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The object with the question data for which you need to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Questions.QuestionEditRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Questions.QuestionEditRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Questions.QuestionEditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Questions.Records.FindPage.QuestionItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/questions/{id}/archive": {
      "patch": {
        "tags": [
          "Question"
        ],
        "summary": "Transfer to the archive of the question.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the of question.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Questions.Records.FindPage.QuestionItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/questions/{id}/unarchive": {
      "patch": {
        "tags": [
          "Question"
        ],
        "summary": "Permanently deleting a question by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the of question.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Questions.Records.FindPage.QuestionItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/questions/{id}/permanently": {
      "delete": {
        "tags": [
          "Question"
        ],
        "summary": "Permanently deleting a question by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the of question.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Questions.Records.FindPage.QuestionItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/reactions": {
      "get": {
        "tags": [
          "Reaction"
        ],
        "summary": "Getting a list of reactions.",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Reactions.Records.ReactionDetail"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Reactions.Records.ReactionDetail"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Reactions.Records.ReactionDetail"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Getting a Room page.",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Statuses",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.EVRoomStatus"
              }
            }
          },
          {
            "name": "Participants",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomReviews.Records.RoomReviewDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Room"
        ],
        "summary": "Creating a new room.",
        "requestBody": {
          "description": "Room.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Backend.Rooms.RoomCreateApiRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Backend.Rooms.RoomCreateApiRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Backend.Rooms.RoomCreateApiRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.Page.RoomPageDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.Page.RoomPageDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.Page.RoomPageDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/{id}": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Getting a Room by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.Detail.RoomDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.Detail.RoomDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.Detail.RoomDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Room"
        ],
        "summary": "Update room.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Request.RoomUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Request.RoomUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Request.RoomUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/{id}/state": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Getting a Room state by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomStates.ActualRoomStateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomStates.ActualRoomStateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomStates.ActualRoomStateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/{id}/state/{type}": {
      "put": {
        "tags": [
          "Room"
        ],
        "summary": "Upsert Room state.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "State type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "State payload.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Backend.Rooms.UpsertRoomRequestApi"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Backend.Rooms.UpsertRoomRequestApi"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Backend.Rooms.UpsertRoomRequestApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Room"
        ],
        "summary": "Delete Room state.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "State type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/{id}/analytics": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Get analytics by room.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Analytics"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Analytics"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Analytics"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/{id}/analytics/summary": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Get analytics  by room.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.AnalyticsSummary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.AnalyticsSummary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.AnalyticsSummary"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/{id}/close": {
      "patch": {
        "tags": [
          "Room"
        ],
        "summary": "Closing the room.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "room id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/{id}/startReview": {
      "patch": {
        "tags": [
          "Room"
        ],
        "summary": "Moving the room to the review stage.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "room id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/event": {
      "post": {
        "tags": [
          "Room"
        ],
        "summary": "Sending event to room.",
        "requestBody": {
          "description": "Request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Backend.Rooms.RoomEventApiRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Backend.Rooms.RoomEventApiRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Backend.Rooms.RoomEventApiRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/{roomId}/transcription/search": {
      "post": {
        "tags": [
          "Room"
        ],
        "summary": "Get transcription by room.",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "description": "Room id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Options. Key = transcription type, value = response options.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Request.Transcription.TranscriptionRequestOption"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Request.Transcription.TranscriptionRequestOption"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Request.Transcription.TranscriptionRequestOption"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Interview.Domain.Events.Storage.IStorageEvent"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Interview.Domain.Events.Storage.IStorageEvent"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Interview.Domain.Events.Storage.IStorageEvent"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/invites/{roomId}": {
      "get": {
        "tags": [
          "RoomInvite"
        ],
        "summary": "Getting a Room invites by room id.",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "description": "Room id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/invites/{roomId}/apply": {
      "post": {
        "tags": [
          "RoomInvite"
        ],
        "summary": "Apply Room Invitations.",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "description": "room id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "inviteId",
            "in": "query",
            "description": "invite id.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/invites/{id}": {
      "post": {
        "tags": [
          "RoomInvite"
        ],
        "summary": "Generating room invitations for all types of room participants.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "room id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rooms/invites": {
      "put": {
        "tags": [
          "RoomInvite"
        ],
        "summary": "Generating room invitation for only one type of room participants.",
        "requestBody": {
          "description": "Request to regenerate the invitation.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Request.RoomInviteGeneratedRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Request.RoomInviteGeneratedRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Request.RoomInviteGeneratedRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/room-participants": {
      "get": {
        "tags": [
          "RoomParticipant"
        ],
        "summary": "Getting a list of room participants.",
        "parameters": [
          {
            "name": "RoomId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Response.RoomParticipantDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Response.RoomParticipantDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Response.RoomParticipantDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RoomParticipant"
        ],
        "summary": "Adding a transaction participant to a room.",
        "requestBody": {
          "description": "Data for adding a participant to a room.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Request.RoomParticipantCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Request.RoomParticipantCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Request.RoomParticipantCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Response.RoomParticipantDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Response.RoomParticipantDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Response.RoomParticipantDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RoomParticipant"
        ],
        "summary": "Changing the status of a room participant.",
        "requestBody": {
          "description": "Data changes in the status of a room participant.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Request.RoomParticipantChangeStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Request.RoomParticipantChangeStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Request.RoomParticipantChangeStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Response.RoomParticipantDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Response.RoomParticipantDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.Records.Response.RoomParticipantDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/room-questions/active-question": {
      "put": {
        "tags": [
          "RoomQuestion"
        ],
        "summary": "Changing the current question.",
        "requestBody": {
          "description": "User Request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestions.Records.RoomQuestionChangeActiveRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestions.Records.RoomQuestionChangeActiveRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestions.Records.RoomQuestionChangeActiveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestions.Records.Response.RoomQuestionDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/room-questions": {
      "get": {
        "tags": [
          "RoomQuestion"
        ],
        "summary": "Getting a page with room questions.",
        "parameters": [
          {
            "name": "RoomId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "States",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestions.RoomQuestionStateType"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestions.Records.Response.RoomQuestionResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/room-evaluations": {
      "get": {
        "tags": [
          "RoomQuestionEvaluation"
        ],
        "parameters": [
          {
            "name": "RoomId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "QuestionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestionEvaluations.Records.Response.QuestionEvaluationDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/room-evaluations/merge": {
      "post": {
        "tags": [
          "RoomQuestionEvaluation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Backend.RoomEvaluations.Records.QuestionEvaluationMergeRequestApi"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Backend.RoomEvaluations.Records.QuestionEvaluationMergeRequestApi"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Backend.RoomEvaluations.Records.QuestionEvaluationMergeRequestApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestionEvaluations.Records.Response.QuestionEvaluationDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/room-reactions": {
      "post": {
        "tags": [
          "RoomReaction"
        ],
        "summary": "Creates a reaction from the user to an active question in the room.",
        "requestBody": {
          "description": "The user request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestionReactions.Records.RoomQuestionReactionCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestionReactions.Records.RoomQuestionReactionCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestionReactions.Records.RoomQuestionReactionCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestionReactions.Records.Response.RoomQuestionReactionDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestionReactions.Records.Response.RoomQuestionReactionDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestionReactions.Records.Response.RoomQuestionReactionDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/room-reviews": {
      "get": {
        "tags": [
          "RoomReview"
        ],
        "summary": "Getting a room reviews page.",
        "parameters": [
          {
            "name": "Page.PageSize",
            "in": "query",
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page.PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Filter.RoomId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Filter.State",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomReviews.EVRoomReviewState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomReviews.Records.RoomReviewDetail"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RoomReview"
        ],
        "summary": "Creating a review for a room.",
        "requestBody": {
          "description": "User Request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomReviews.Records.RoomReviewCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomReviews.Records.RoomReviewCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomReviews.Records.RoomReviewCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomReviews.Records.RoomReviewDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/room-reviews/{id}": {
      "put": {
        "tags": [
          "RoomReview"
        ],
        "summary": "Update a review by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id review.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "User Request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomReviews.Records.RoomReviewUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomReviews.Records.RoomReviewUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomReviews.Records.RoomReviewUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomReviews.Records.RoomReviewDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tags/tag": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Getting a available tags page.",
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "description": "Tag value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Tags.Records.Response.TagItem"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Creating a new tag.",
        "requestBody": {
          "description": "Tag edit request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Tags.TagEditRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Tags.TagEditRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Tags.TagEditRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Tags.Records.Response.TagItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tags/tag/{id}": {
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "Updating the tag by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the of tag.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The object with the tag data for which you need to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Tags.TagEditRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Tags.TagEditRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Tags.TagEditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Tags.Records.Response.TagItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Users.Records.UserDetail"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/nickname/{nickname}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "nickname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Common.PagedListResponse`1[[Interview.Domain.Users.Records.UserDetail, Interview.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/role/{role}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Interview.Domain.Users.Roles.RoleNameType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Users.Records.UserDetail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/admins": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview.Domain.Users.Records.UserDetail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/self": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Users.Records.UserDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/permissions": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Interview.Domain.Users.Records.PermissionItem"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Users.Records.PermissionModifyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Users.Records.PermissionModifyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Interview.Domain.Users.Records.PermissionModifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Domain.Users.Records.PermissionItem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview.Backend.Responses.MessageResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Interview.Backend.Common.PagedListResponse`1[[Interview.Domain.Users.Records.UserDetail, Interview.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "description": "Gets current page number.",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets the number of items on the page.",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Gets the amount of all pages.",
            "format": "int32",
            "readOnly": true
          },
          "totalItemCount": {
            "type": "integer",
            "description": "Gets the number of all list items.",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Users.Records.UserDetail"
            },
            "description": "Gets a list of all items.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Serves as a class for getting data to display as a page."
      },
      "Interview.Backend.Responses.MessageResponse": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Backend.RoomEvaluations.Records.QuestionEvaluationMergeRequestApi": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "questionId": {
            "type": "string",
            "format": "uuid"
          },
          "review": {
            "type": "string",
            "nullable": true
          },
          "mark": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Backend.Rooms.RoomCreateApiRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "accessType": {
            "type": "string",
            "nullable": true
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Request.RoomQuestionRequest"
            },
            "nullable": true
          },
          "experts": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "examinees": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "tags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "scheduleStartTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Room Create Api Request."
      },
      "Interview.Backend.Rooms.RoomEventApiRequest": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "additionalData": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Backend.Rooms.UpsertRoomRequestApi": {
        "required": [
          "payload"
        ],
        "type": "object",
        "properties": {
          "payload": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Categories.Edit.CategoryEditRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Categories.Page.CategoryResponse": {
        "required": [
          "id",
          "name",
          "parentId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Events.Service.Create.AppEventCreateRequest": {
        "required": [
          "participantTypes",
          "roles",
          "stateful",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "stateful": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Users.Roles.RoleNameType"
            },
            "nullable": true
          },
          "participantTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Events.Service.FindPage.AppEventItem": {
        "required": [
          "id",
          "participantTypes",
          "roles",
          "stateful",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "stateful": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Users.Roles.RoleNameType"
            },
            "nullable": true
          },
          "participantTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Events.Service.Update.AppEventUpdateRequest": {
        "required": [
          "participantTypes",
          "stateful"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "stateful": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Users.Roles.RoleNameType"
            },
            "nullable": true
          },
          "participantTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Events.Storage.IStorageEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "roomId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "payload": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "stateful": {
            "type": "boolean",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Questions.CodeEditors.QuestionCodeEditorEditRequest": {
        "required": [
          "content",
          "lang"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Questions.CodeEditors.QuestionCodeEditorResponse": {
        "required": [
          "content",
          "lang"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Questions.EVQuestionType": {
        "enum": [
          "Public",
          "Private"
        ],
        "type": "string"
      },
      "Interview.Domain.Questions.QuestionAnswers.QuestionAnswerCreateRequest": {
        "required": [
          "codeEditor",
          "content",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "codeEditor": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Questions.QuestionAnswers.QuestionAnswerEditRequest": {
        "required": [
          "codeEditor",
          "content",
          "id",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "codeEditor": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Questions.QuestionAnswers.QuestionAnswerResponse": {
        "required": [
          "codeEditor",
          "content",
          "id",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "codeEditor": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Questions.QuestionCreateRequest": {
        "required": [
          "answers",
          "categoryId",
          "codeEditor",
          "type"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Interview.Domain.Questions.EVQuestionType"
          },
          "categoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "codeEditor": {
            "$ref": "#/components/schemas/Interview.Domain.Questions.CodeEditors.QuestionCodeEditorEditRequest"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Questions.QuestionAnswers.QuestionAnswerCreateRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Questions.QuestionEditRequest": {
        "required": [
          "answers",
          "categoryId",
          "codeEditor"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "codeEditor": {
            "$ref": "#/components/schemas/Interview.Domain.Questions.CodeEditors.QuestionCodeEditorEditRequest"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Questions.QuestionAnswers.QuestionAnswerEditRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Questions.Records.FindPage.QuestionItem": {
        "required": [
          "answers",
          "category",
          "codeEditor",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Tags.Records.Response.TagItem"
            },
            "nullable": true
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Questions.QuestionAnswers.QuestionAnswerResponse"
            },
            "nullable": true
          },
          "codeEditor": {
            "$ref": "#/components/schemas/Interview.Domain.Questions.CodeEditors.QuestionCodeEditorResponse"
          },
          "category": {
            "$ref": "#/components/schemas/Interview.Domain.Categories.Page.CategoryResponse"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Reactions.ReactionType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Reactions.Records.ReactionDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/Interview.Domain.Reactions.ReactionType"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Analytics": {
        "required": [
          "questions"
        ],
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.Analytics_AnalyticsQuestion"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.AnalyticsSummary": {
        "required": [
          "questions"
        ],
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.AnalyticsSummaryQuestion"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.AnalyticsSummaryExpert": {
        "required": [
          "nickname",
          "reactionsSummary"
        ],
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "reactionsSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.Analytics_AnalyticsReactionSummary"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.AnalyticsSummaryQuestion": {
        "required": [
          "experts",
          "id",
          "value",
          "viewers"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "viewers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.AnalyticsSummaryViewer"
            },
            "nullable": true
          },
          "experts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.AnalyticsSummaryExpert"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.AnalyticsSummaryViewer": {
        "required": [
          "reactionsSummary"
        ],
        "type": "object",
        "properties": {
          "reactionsSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.Analytics_AnalyticsReactionSummary"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Analytics_AnalyticsQuestion": {
        "required": [
          "id",
          "status",
          "users",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.Analytics_AnalyticsUser"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Analytics_AnalyticsReactionSummary": {
        "required": [
          "count",
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Analytics_AnalyticsUser": {
        "required": [
          "avatar",
          "evaluation",
          "id",
          "nickname",
          "participantType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "nullable": true
          },
          "participantType": {
            "type": "string",
            "nullable": true
          },
          "evaluation": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.Analytics_AnalyticsUserQuestionEvaluation"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Analytics_AnalyticsUserQuestionEvaluation": {
        "required": [
          "mark",
          "review"
        ],
        "type": "object",
        "properties": {
          "review": {
            "type": "string",
            "nullable": true
          },
          "mark": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.EVRoomAccessType": {
        "enum": [
          "Public",
          "Private"
        ],
        "type": "string"
      },
      "Interview.Domain.Rooms.EVRoomStatus": {
        "enum": [
          "New",
          "Active",
          "Review",
          "Close"
        ],
        "type": "string"
      },
      "Interview.Domain.Rooms.Records.Request.RoomInviteGeneratedRequest": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "participantType": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.EVRoomParticipantType"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Records.Request.RoomQuestionRequest": {
        "required": [
          "id",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Records.Request.RoomUpdateRequest": {
        "required": [
          "questions"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Request.RoomQuestionRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Records.Request.Transcription.TranscriptionRequestOption": {
        "required": [
          "last",
          "responseName"
        ],
        "type": "object",
        "properties": {
          "responseName": {
            "minLength": 1,
            "type": "string"
          },
          "last": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Records.Response.Detail.RoomDetail": {
        "required": [
          "invites",
          "owner",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.Detail.RoomUserDetail"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.Detail.RoomUserDetail"
            },
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.EVRoomStatus"
          },
          "invites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomInviteResponse"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.EVRoomAccessType"
          },
          "timer": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.Detail.RoomTimerDetail"
          },
          "scheduledStartTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Records.Response.Detail.RoomQuestionDetail": {
        "required": [
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Records.Response.Detail.RoomTimerDetail": {
        "type": "object",
        "properties": {
          "durationSec": {
            "type": "integer",
            "format": "int64"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Records.Response.Detail.RoomUserDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Records.Response.Page.RoomPageDetail": {
        "required": [
          "roomStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.Detail.RoomQuestionDetail"
            },
            "nullable": true
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.Detail.RoomUserDetail"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Tags.Records.Response.TagItem"
            },
            "nullable": true
          },
          "roomStatus": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.EVRoomStatus"
          },
          "timer": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.Detail.RoomTimerDetail"
          },
          "scheduledStartTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Records.Response.RoomInviteResponse": {
        "required": [
          "inviteId",
          "max",
          "participantType",
          "used"
        ],
        "type": "object",
        "properties": {
          "inviteId": {
            "type": "string",
            "format": "uuid"
          },
          "participantType": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomParticipants.EVRoomParticipantType"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "used": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Records.Response.RoomStates.ActualRoomStateResponse": {
        "required": [
          "codeEditorContent",
          "states"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "activeQuestion": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomStates.RoomStateQuestion"
          },
          "likeCount": {
            "type": "integer",
            "format": "int32"
          },
          "dislikeCount": {
            "type": "integer",
            "format": "int32"
          },
          "codeEditorContent": {
            "type": "string",
            "nullable": true
          },
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Rooms.Records.Response.RoomStates.RoomStateResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Records.Response.RoomStates.RoomStateQuestion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestions.RoomQuestionState"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.Records.Response.RoomStates.RoomStateResponse": {
        "required": [
          "payload",
          "type"
        ],
        "type": "object",
        "properties": {
          "payload": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomParticipants.EVRoomParticipantType": {
        "enum": [
          "Viewer",
          "Expert",
          "Examinee"
        ],
        "type": "string"
      },
      "Interview.Domain.Rooms.RoomParticipants.Records.Request.RoomParticipantChangeStatusRequest": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "userType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomParticipants.Records.Request.RoomParticipantCreateRequest": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomParticipants.Records.Response.RoomParticipantDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "userType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomQuestionEvaluations.Records.Response.QuestionEvaluationDetail": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "mark": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "review": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomQuestionReactions.Records.Response.RoomQuestionReactionDetail": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "reaction": {
            "type": "string",
            "format": "uuid"
          },
          "question": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomQuestionReactions.Records.RoomQuestionReactionCreateRequest": {
        "type": "object",
        "properties": {
          "reactionId": {
            "type": "string",
            "format": "uuid"
          },
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "payload": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomQuestions.Records.Response.RoomQuestionDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "questionId": {
            "type": "string",
            "format": "uuid"
          },
          "state": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestions.RoomQuestionState"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomQuestions.Records.Response.RoomQuestionResponse": {
        "required": [
          "id",
          "order",
          "state",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestions.RoomQuestionStateType"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomQuestions.Records.RoomQuestionChangeActiveRequest": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "questionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomQuestions.RoomQuestionState": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "enumValue": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomQuestions.RoomQuestionStateType"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomQuestions.RoomQuestionStateType": {
        "enum": [
          "Closed",
          "Open",
          "Active"
        ],
        "type": "string"
      },
      "Interview.Domain.Rooms.RoomReviews.EVRoomReviewState": {
        "enum": [
          "Open",
          "Closed"
        ],
        "type": "string"
      },
      "Interview.Domain.Rooms.RoomReviews.Records.RoomReviewCreateRequest": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "review": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomReviews.Records.RoomReviewDetail": {
        "required": [
          "id",
          "review",
          "roomId",
          "state",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "review": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Rooms.RoomReviews.Records.RoomReviewUpdateRequest": {
        "type": "object",
        "properties": {
          "review": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/Interview.Domain.Rooms.RoomReviews.EVRoomReviewState"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Tags.Records.Response.TagItem": {
        "required": [
          "hexValue",
          "id",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "hexValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Tags.TagEditRequest": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "hexValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Users.Records.PermissionDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Users.Records.PermissionItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "activate": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Users.Records.PermissionModifyRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "activate": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Users.Records.UserDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "twitchIdentity": {
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interview.Domain.Users.Records.PermissionDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Interview.Domain.Users.Roles.RoleNameType": {
        "enum": [
          "User",
          "Admin"
        ],
        "type": "string"
      }
    }
  }
}